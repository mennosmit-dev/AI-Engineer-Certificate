"""
Objectives
 - Understand how to use `TextLoader` to load text files.
 - Learn how to load PDFs using `PyPDFLoader` and `PyMuPDFLoader`.
 - Use `UnstructuredMarkdownLoader` to load Markdown files.
 - Load JSON files with `JSONLoader` using jq schemas.
 - Process CSV files with `CSVLoader` and `UnstructuredCSVLoader`.
 - Load Webpage content using `WebBaseLoader`.
 - Load Word documents using `Docx2txtLoader`.
 - Utilize `UnstructuredFileLoader` for various file types.

Installing required libraries
"""

# Commented out IPython magic to ensure Python compatibility.
# 
# %%capture
# #After executing the cell,please RESTART the kernel and run all the cells.
# !pip install --user "langchain-community==0.2.1"
# !pip install --user "pypdf==4.2.0"
# !pip install --user "PyMuPDF==1.24.5"
# !pip install --user "unstructured==0.14.8"
# !pip install --user "markdown==3.6"
# !pip install --user  "jq==1.7.0"
# !pip install --user "pandas==2.2.2"
# !pip install --user "docx2txt==0.8"
# !pip install --user "requests==2.32.3"
# !pip install --user "beautifulsoup4==4.12.3"
# !pip install --user "nltk==3.8.0"
#

"""
Importing Required Libraries
"""

# You can also use this section to suppress warnings generated by your code:

def warn(*args, **kwargs):
    pass
import warnings
warnings.warn = warn
warnings.filterwarnings('ignore')

from pprint import pprint
import json
from pathlib import Path
import nltk
from langchain_community.document_loaders import TextLoader
from langchain_community.document_loaders import PyPDFLoader
from langchain_community.document_loaders import PyMuPDFLoader
from langchain_community.document_loaders import UnstructuredMarkdownLoader
from langchain_community.document_loaders import JSONLoader
from langchain_community.document_loaders.csv_loader import CSVLoader
from langchain_community.document_loaders.csv_loader import UnstructuredCSVLoader
from langchain_community.document_loaders import WebBaseLoader
from langchain_community.document_loaders import Docx2txtLoader
from langchain_community.document_loaders import UnstructuredFileLoader

nltk.download('punkt_tab')
nltk.download('averaged_perceptron_tagger_eng')

"""
Load from TXT files
"""

!wget "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/Ec5f3KYU1CpbKRp1whFLZw/new-Policies.txt"

"""
Next, we will use the `TextLoader` class to load the file.
"""

loader = TextLoader("new-Policies.txt")
loader

"""
Here, we use the `load` method to load the data as documents.
"""

data = loader.load()

"""
Let's present the entire data (document) here.
"""

data

"""
We can also use the `pprint` function to print the first 1000 characters of the `page_content` here.
"""

pprint(data[0].page_content[:1000])

"""
Load from PDF files

PyPDFLoader
"""

pdf_url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/Q81D33CdRLK6LswuQrANQQ/instructlab.pdf"

loader = PyPDFLoader(pdf_url)

pages = loader.load_and_split()

"""
Display the first page of the PDF.
"""

print(pages[0])

"""
Display the first three pages of the PDF.
"""
for p,page in enumerate(pages[0:3]):
    print(f"page number {p+1}")
    print(page)

"""
PyMuPDFLoader
"""

loader = PyMuPDFLoader(pdf_url)
loader

data = loader.load()

print(data[0])

"""
Load from Markdown files
"""
!wget 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/eMSP5vJjj9yOfAacLZRWsg/markdown-sample.md'

markdown_path = "markdown-sample.md"
loader = UnstructuredMarkdownLoader(markdown_path)
loader

data = loader.load()

data

"""
Load from JSON files
"""

!wget 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/hAmzVJeOUAMHzmhUHNdAUg/facebook-chat.json'

"""
First, let's use `pprint` to take a look at the JSON file and its structure.
"""

file_path='facebook-chat.json'
data = json.loads(Path(file_path).read_text())

pprint(data)

"""
We use `JSONLoader` to load data from the JSON file. However, JSON files can have various attribute-value pairs. If we want to load a specific attribute and its value, we need to set an appropriate `jq schema`.
"""

loader = JSONLoader(
    file_path=file_path,
    jq_schema='.messages[].content',
    text_content=False)

data = loader.load()

pprint(data)

"""
Load from CSV files
"""

!wget 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IygVG_j0M87BM4Z0zFsBMA/mlb-teams-2012.csv'

loader = CSVLoader(file_path='mlb-teams-2012.csv')
data = loader.load()

data

"""
UnstructuredCSVLoader
"""

loader = UnstructuredCSVLoader(
    file_path="mlb-teams-2012.csv", mode="elements"
)
data = loader.load()

data[0].page_content

print(data[0].metadata["text_as_html"])

"""
Load from URL/Website files
"""

import requests
from bs4 import BeautifulSoup

url = 'https://www.ibm.com/topics/langchain'
response = requests.get(url)

soup = BeautifulSoup(response.content, 'html.parser')
print(soup.prettify())

"""
Load from single web page
"""

loader = WebBaseLoader("https://www.ibm.com/topics/langchain")

data = loader.load()

data

"""
Load from multiple web pages
"""

loader = WebBaseLoader(["https://www.ibm.com/topics/langchain", "https://www.redhat.com/en/topics/ai/what-is-instructlab"])
data = loader.load()
data

"""
Load from WORD files
"""

!wget "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/94hiHUNLZdb0bLMkrCh79g/file-sample.docx"

loader = Docx2txtLoader("file-sample.docx")

data = loader.load()

data

"""
Load from Unstructured Files
"""

loader = UnstructuredFileLoader("new-Policies.txt")
data = loader.load()
data

"""
We also can load `.md` file.
"""

loader = UnstructuredFileLoader("markdown-sample.md")
data = loader.load()
data

"""
Multiple files with different formats
"""

files = ["markdown-sample.md", "new-Policies.txt"]

loader = UnstructuredFileLoader(files)

data = loader.load()

data

"""
Exercises

### Exercise 1 - Try to use other PDF loaders

There are many other PDF loaders in LangChain, for example, `PyPDFium2Loader`. Can you use this PDF loader to load the PDF and see the difference?
"""

!pip install pypdfium2

from langchain_community.document_loaders import PyPDFium2Loader

loader = PyPDFium2Loader(pdf_url)
pages = loader.load()
print(pages[0])

### Exercise 2 - Load from Arxiv

Sometimes we have paper that we want to load from Arxiv, can you load this [paper](https://arxiv.org/abs/1605.08386) using `ArxivLoader`.
"""

!pip install arxiv

from langchain_community.document_loaders import ArxivLoader

docs = ArxivLoader(query="1605.08386", load_max_docs=2).load()

print(docs[0].page_content[:1000])


### Other Contributors

[Joseph Santarcangelo](https://www.linkedin.com/in/joseph-s-50398b136/)

Joseph has a Ph.D. in Electrical Engineering, his research focused on using machine learning, signal processing, and computer vision to determine how videos impact human cognition. Joseph has been working for IBM since he completed his PhD.

[Hailey Quach](https://author.skills.network/instructors/hailey_quach)

Hailey is a Data Scientist at IBM. She is also an undergraduate student at Concordia University, Montreal.

Â© Copyright IBM Corporation. All rights reserved.
"""
